# Copyright 2024, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of NVIDIA CORPORATION nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

name: "multimodal_encoders"
backend: "python"
max_batch_size: ${triton_max_batch_size}
input [
    {
        name: "IMAGE"
        data_type: TYPE_FP16
        dims: [ -1, -1, -1 ]
    }
]

# The supported datatype in trtion's python backend is written
# https://github.com/triton-inference-server/python_backend/blob/bfabfdbf4aa1e3db36aaf9e640b1ce5e0a720f48/src/pb_stub_utils.cc#L124
# NOTE
# TYPE_BF16, TYPE_FP8 is not supported
output [
    {
        name: "OUT_PROMPT_EMBEDDING_TABLE"
        data_type: TYPE_FP16
        dims: [ -1, -1 ]
    },
    {
        name: "OUT_PROMPT_VOCAB_SIZE"
        data_type: TYPE_INT32
        dims: [ 1 ]
    }
]

# USER can add another modal's model as parameters and also as inputs here.

parameters {
  key: "visual_model_path"
  value: {
    string_value: "${visual_model_path}"
  }
}

instance_group [
    {
        count: 1
        kind: KIND_CPU
    }
]
